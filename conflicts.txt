Shift
void main() {
	myInt = anotherInt();
}

Reduce
void main() {
	myInt = name; 
}

ToY.y: warning: 1 shift/reduce conflict [-Wconflicts-sr]
ToY.y: warning: shift/reduce conflict on token ASSIGN [-Wcounterexamples]
  Example: IDENTIFIER • ASSIGN exp SEMICOLON
  Shift derivation
    statement
    ↳ 26: IDENTIFIER • ASSIGN exp SEMICOLON
  Reduce derivation
    statement
    ↳ 29: lExp               ASSIGN exp SEMICOLON
          ↳ 34: IDENTIFIER •
ToY.y: warning: shift/reduce conflict on token ASSIGN [-Wcounterexamples]
time limit exceeded: 6.000000
  First example: returnType IDENTIFIER LEFT declarationZeroPlus RIGHT LEFTCURLY IDENTIFIER • ASSIGN IDENTIFIER LEFT exp RIGHT SEMICOLON RIGHTCURLY $end
  Shift derivation
    $accept
    ↳ 0: proc                                                                                                                                          $end
         ↳ 20: returnType IDENTIFIER LEFT declarationZeroPlus RIGHT LEFTCURLY statement                                                     RIGHTCURLY
                                                                              ↳ 31: IDENTIFIER • ASSIGN IDENTIFIER LEFT exp RIGHT SEMICOLON
  Second example: returnType IDENTIFIER LEFT declarationZeroPlus RIGHT LEFTCURLY IDENTIFIER • ASSIGN exp SEMICOLON RIGHTCURLY pgm1 $end
  Reduce derivation
    $accept
    ↳ 0: pgm                                                                                                                                     $end
         ↳ 1: proc                                                                                                                          pgm1
              ↳ 20: returnType IDENTIFIER LEFT declarationZeroPlus RIGHT LEFTCURLY statement                                     RIGHTCURLY
                                                                                   ↳ 29: lExp               ASSIGN exp SEMICOLON
                                                                                         ↳ 34: IDENTIFIER •
